
!pip install -q youtube-transcript-api gradio huggingface_hub


from youtube_transcript_api import YouTubeTranscriptApi
from huggingface_hub import InferenceClient
import gradio as gr
import os

os.environ["HUGGINGFACEHUB_API_TOKEN"] = "YOUR-TOKEN"


client = InferenceClient(model="facebook/bart-large-cnn", token=os.environ["HUGGINGFACEHUB_API_TOKEN"])


def extract_transcript(video_url):
    if "v=" in video_url:
        video_id = video_url.split("v=")[-1].split("&")[0]
    elif "youtu.be/" in video_url:
        video_id = video_url.split("youtu.be/")[-1].split("?")[0]
    else:
        video_id = video_url
    transcript_data = YouTubeTranscriptApi.get_transcript(video_id)
    transcript = " ".join([t["text"] for t in transcript_data])
    return transcript


def summarize_video(video_url):
    try:
        transcript = extract_transcript(video_url)

        transcript = transcript[:1024]
        summary = client.summarization(transcript)
        return summary
    except Exception as e:
        return f"‚ùå Error: {str(e)}"

iface = gr.Interface(
    fn=summarize_video,
    inputs=gr.Textbox(label="YouTube Video URL"),
    outputs=gr.Textbox(label="Video Summary"),
    title="üé• YouTube Video Summarizer",
    description="Enter a YouTube URL to get a summary using Hugging Face summarization models."
)

iface.launch(share=True)
